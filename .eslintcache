[{"/Users/benghirardani/Projects/hook-into-the-weather/src/index.js":"1","/Users/benghirardani/Projects/hook-into-the-weather/src/App.js":"2","/Users/benghirardani/Projects/hook-into-the-weather/src/reportWebVitals.js":"3","/Users/benghirardani/Projects/hook-into-the-weather/src/LandingPage/LandingPage.jsx":"4","/Users/benghirardani/Projects/hook-into-the-weather/src/Results/Results.jsx":"5","/Users/benghirardani/Projects/hook-into-the-weather/src/Search/Search.jsx":"6","/Users/benghirardani/Projects/hook-into-the-weather/src/SomethingWentWrong/SomethingWentWrong.jsx":"7","/Users/benghirardani/Projects/hook-into-the-weather/src/GetIcon/GetIcon.jsx":"8","/Users/benghirardani/Projects/hook-into-the-weather/src/ForecastTile/ForecastTile.jsx":"9","/Users/benghirardani/Projects/hook-into-the-weather/src/IconList/IconList.jsx":"10"},{"size":517,"mtime":1623503828056,"results":"11","hashOfConfig":"12"},{"size":1697,"mtime":1638899842995,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611518611380,"results":"14","hashOfConfig":"12"},{"size":1288,"mtime":1637759733617,"results":"15","hashOfConfig":"12"},{"size":5857,"mtime":1638898081207,"results":"16","hashOfConfig":"12"},{"size":586,"mtime":1637759812522,"results":"17","hashOfConfig":"12"},{"size":218,"mtime":1625594280279,"results":"18","hashOfConfig":"12"},{"size":680,"mtime":1632858798382,"results":"19","hashOfConfig":"12"},{"size":503,"mtime":1632920405592,"results":"20","hashOfConfig":"12"},{"size":6415,"mtime":1632858933068,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"n0nmym",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/benghirardani/Projects/hook-into-the-weather/src/index.js",[],["45","46"],"/Users/benghirardani/Projects/hook-into-the-weather/src/App.js",["47","48","49"],"/Users/benghirardani/Projects/hook-into-the-weather/src/reportWebVitals.js",[],"/Users/benghirardani/Projects/hook-into-the-weather/src/LandingPage/LandingPage.jsx",["50","51"],"// import React from 'react';\n// import './LandingPage.css';\n// import Search from '../Search/Search.jsx';\n// import Results from '../Results/Results.jsx';\n// import SomethingWentWrong from '../SomethingWentWrong/SomethingWentWrong.jsx';\n\n// function LandingPage(props) {\n\n//   function chooseView() {\n//     if (props.display === \"search\") {\n//       return <Search \n//                 applyLocation={props.applyLocation} \n//                 changeDisplay={props.changeDisplay} \n//               />\n//     } else if (props.display === \"results\") {\n//       return <Results \n//                 forecast={props.forecast}\n//               />\n//     } else {\n//       return <SomethingWentWrong/>\n//     }\n//   }\n\n//   return <div className=\"landing-page\">\n//     {chooseView()}\n//   </div>\n// }\n\n// export default LandingPage;\n\nimport React, {useState} from 'react';\nimport './LandingPage.css';\nimport Search from '../Search/Search.jsx';\nimport Results from '../Results/Results.jsx';\nimport SomethingWentWrong from '../SomethingWentWrong/SomethingWentWrong.jsx';\n\nfunction LandingPage(props) {\n\n  return <div className=\"landing-page\">\n    <Search \n      applyLocation={props.applyLocation} \n    />\n    <Results \n      forecast={props.forecast}\n    />\n  </div>\n}\n\nexport default LandingPage;","/Users/benghirardani/Projects/hook-into-the-weather/src/Results/Results.jsx",["52","53","54","55","56","57","58","59"],"import React, { useState, useEffect } from 'react';\nimport './Results.css';\nimport GetIcon from '../GetIcon/GetIcon.jsx';\nimport ForecastTile from '../ForecastTile/ForecastTile.jsx';\nimport IconList from '../IconList/IconList.jsx';\nimport LoadingIcons from 'react-loading-icons';\n\nfunction Results(props) {\n\n  // wrap the stuff I get from props into one object? Does it matter?\n  const [loading, setLoading] = useState(true)\n  const [placeName, setPlaceName] = useState(\"...\")\n  // possible to add template literal? \"${put temp here} C\"\n  const [temp_cHigh, setTemp_cHigh] = useState([\"...\"])\n  const [temp_cLow, setTemp_cLow] = useState(\"...\")\n  const [description, setDescription] = useState(\"...\")\n  const [chanceOfRain, setChanceOfRain] = useState([\"...\"])\n  const [chanceOfSnow, setChanceOfSnow] = useState([\"...\"])\n\n  // *** remove this once everything is working ***\n  // useEffect(()=> {\n  //   console.log(\"cosole log of props - \", props)\n  // })\n\n  // useEffect(()=> {\n  //   if(props.forecast.error) {\n  //     console.log(props.forecast.error.message)\n  //   } else {\n  //     setLoading(false);\n  //     setPlaceName(props.forecast.location.name)\n  //     // pull the data for all days available at once\n  //     // setState takes two arguments, the old state and the new state, in the examples below, the old\n  //     // state is a placeholder so is completely replaced by new state.\n  //     setTemp_cHigh(prevState =>\n  //       [\n  //         props.forecast.forecast.forecastday[0].day.maxtemp_c,\n  //         props.forecast.forecast.forecastday[1].day.maxtemp_c,\n  //         props.forecast.forecast.forecastday[2].day.maxtemp_c\n  //       ]\n  //     )\n  //     setTemp_cLow(prevState =>\n  //       [\n  //         props.forecast.forecast.forecastday[0].day.mintemp_c,\n  //         props.forecast.forecast.forecastday[1].day.mintemp_c,\n  //         props.forecast.forecast.forecastday[2].day.mintemp_c\n  //       ]\n  //     )\n  //     setDescription(props.forecast.forecast.forecastday[0].day.condition.text)\n  //     setChanceOfRain(prevState => \n  //       [\n  //         props.forecast.forecast.forecastday[0].day.daily_chance_of_rain,\n  //         props.forecast.forecast.forecastday[1].day.daily_chance_of_rain,\n  //         props.forecast.forecast.forecastday[2].day.daily_chance_of_rain\n  //       ]\n  //     )\n  //     setChanceOfSnow(prevState => \n  //       [\n  //         props.forecast.forecast.forecastday[0].day.daily_chance_of_snow\n  //       ]\n  //     )\n  //   }\n  // }, [props]);\n\n\n\n  // ***\n  // *** move everything below to state in App.js\n  // ***\n\n  //   useEffect(()=> {\n\n  //   if(props.forecast) {\n    \n  //     setLoading(false);\n\n  //     // .name is undefined\n  //     setPlaceName(props.forecast.location.name) \n\n  //     // pull the data for all days available at once\n  //     // setState takes two arguments, the old state and the new state, in the examples below, the old\n  //     // state is a placeholder so is completely replaced by new state.\n  //     setTemp_cHigh(prevState =>\n  //       [\n  //         props.forecast.forecast.forecastday[0].day.maxtemp_c,\n  //         props.forecast.forecast.forecastday[1].day.maxtemp_c,\n  //         props.forecast.forecast.forecastday[2].day.maxtemp_c\n  //       ]\n  //     )\n  //     setTemp_cLow(prevState =>\n  //       [\n  //         props.forecast.forecast.forecastday[0].day.mintemp_c,\n  //         props.forecast.forecast.forecastday[1].day.mintemp_c,\n  //         props.forecast.forecast.forecastday[2].day.mintemp_c\n  //       ]\n  //     )\n  //     setDescription(props.forecast.forecast.forecastday[0].day.condition.text)\n  //     setChanceOfRain(prevState => \n  //       [\n  //         props.forecast.forecast.forecastday[0].day.daily_chance_of_rain,\n  //         props.forecast.forecast.forecastday[1].day.daily_chance_of_rain,\n  //         props.forecast.forecast.forecastday[2].day.daily_chance_of_rain\n  //       ]\n  //     )\n  //     setChanceOfSnow(prevState => \n  //       [\n  //         props.forecast.forecast.forecastday[0].day.daily_chance_of_snow\n  //       ]\n  //     )\n  //   } \n  // }, [props]);\n\n  const loadingIcon = <LoadingIcons.TailSpin\n            className=\"current-weather\"\n            stroke=\"#000000\"\n            viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />;\n\n\n  // checks if data is available, returns either a loading icon or parses the icon ref\n  // and uses it to refer to the relevent entry in the icon object\n  function currentWeatherIcon() {\n    if(loading === true) {\n      return loadingIcon\n    } else if (loading === false) {\n      const iconRef = GetIcon(props.forecast.forecast.forecastday[0].day.condition.icon)\n      return <img src={IconList[iconRef]} alt=\"Weather Icon\"></img>\n    }\n  };\n\n  return(\n    <div className=\"results\">\n\n      <div className=\"upper\">\n        <div className=\"information\">\n          <h1>{placeName}</h1>\n            <section className=\"temp-and-description\">\n              <p className=\"temp\">\n                High: {temp_cHigh[0]}\n                <br></br>\n                Low: {temp_cLow[0]}\n              </p> \n              <p className=\"description\">\n                {description}\n              </p>\n            </section>\n          <p className=\"wind-and-rain\">\n            <img src={IconList.Day308} alt=\"rain icon\"></img>: {chanceOfRain[0]}%\n            <img src={IconList.Day338} alt=\"snow icon\"></img>: {chanceOfSnow[0]}%\n          </p>\n        </div>\n        <div className=\"icon-tile\">\n          {currentWeatherIcon()}\n        </div>\n      </div>\n\n      <div className=\"lower\">\n\n        {/* need to pass icon, high and low as props */}\n\n        <ForecastTile/>\n        <ForecastTile/>\n        <ForecastTile/>\n        <ForecastTile/>\n        <ForecastTile/>\n        <ForecastTile/>\n      </div>\n    </div>\n  )\n};\n\nexport default Results;","/Users/benghirardani/Projects/hook-into-the-weather/src/Search/Search.jsx",[],"/Users/benghirardani/Projects/hook-into-the-weather/src/SomethingWentWrong/SomethingWentWrong.jsx",[],"/Users/benghirardani/Projects/hook-into-the-weather/src/GetIcon/GetIcon.jsx",[],"/Users/benghirardani/Projects/hook-into-the-weather/src/ForecastTile/ForecastTile.jsx",[],"/Users/benghirardani/Projects/hook-into-the-weather/src/IconList/IconList.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":19},{"ruleId":"64","severity":1,"message":"68","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":22},{"ruleId":"64","severity":1,"message":"69","line":10,"column":24,"nodeType":"66","messageId":"67","endLine":10,"endColumn":39},{"ruleId":"64","severity":1,"message":"70","line":31,"column":16,"nodeType":"66","messageId":"67","endLine":31,"endColumn":24},{"ruleId":"64","severity":1,"message":"71","line":35,"column":8,"nodeType":"66","messageId":"67","endLine":35,"endColumn":26},{"ruleId":"64","severity":1,"message":"72","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"73","line":11,"column":19,"nodeType":"66","messageId":"67","endLine":11,"endColumn":29},{"ruleId":"64","severity":1,"message":"74","line":12,"column":21,"nodeType":"66","messageId":"67","endLine":12,"endColumn":33},{"ruleId":"64","severity":1,"message":"75","line":14,"column":22,"nodeType":"66","messageId":"67","endLine":14,"endColumn":35},{"ruleId":"64","severity":1,"message":"76","line":15,"column":21,"nodeType":"66","messageId":"67","endLine":15,"endColumn":33},{"ruleId":"64","severity":1,"message":"77","line":16,"column":23,"nodeType":"66","messageId":"67","endLine":16,"endColumn":37},{"ruleId":"64","severity":1,"message":"78","line":17,"column":24,"nodeType":"66","messageId":"67","endLine":17,"endColumn":39},{"ruleId":"64","severity":1,"message":"79","line":18,"column":24,"nodeType":"66","messageId":"67","endLine":18,"endColumn":39},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'tempCentHigh' is assigned a value but never used.","'setTempCentHigh' is assigned a value but never used.","'useState' is defined but never used.","'SomethingWentWrong' is defined but never used.","'useEffect' is defined but never used.","'setLoading' is assigned a value but never used.","'setPlaceName' is assigned a value but never used.","'setTemp_cHigh' is assigned a value but never used.","'setTemp_cLow' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setChanceOfRain' is assigned a value but never used.","'setChanceOfSnow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]